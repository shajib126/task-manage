{"version":3,"file":"static/js/850.16ad68d3.chunk.js","mappings":"gNAsJA,EA1IgB,WACd,IAAIA,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,GAAcC,EAAAA,EAAAA,WAEhBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACAC,QAAQC,IAAIC,EACd,GAAG,IACH,IAAMA,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,QAAQC,KAAK,IACxDC,GAAWC,EAAAA,EAAAA,MAmCjB,OACE,iBAAKC,UAAU,oBAAmB,WAChC,gBACEC,IAAK,SAACC,GAAK,OAAMf,EAAce,CAAK,EAEpCC,IAAKV,EAAYW,MACjBC,IAAI,YAEN,mBACA,iBAAKL,UAAU,iBAAgB,WAC7B,4BACE,2BAAO,qBACP,kBACEM,SA9CW,WACnB,IAAMC,EAAUrB,EAAasB,MAAM,IACnCC,EAAAA,EAAAA,IAAUF,GAASG,MAAK,SAACC,GACvBxB,EAAYgB,IAAMQ,CACpB,GACF,EA0CUV,IAAK,SAACC,GAAK,OAAMhB,EAAegB,CAAK,EACrCU,YAAY,aAEZC,KAAK,aAGT,4BACE,2BAAO,mBACP,kBAEEC,aAAcrB,EAAYsB,MAC1BC,UAAU,EACVf,IAAK,SAACC,GAAK,OAAMrB,EAAWqB,CAAK,EACjCU,YAAY,aAEZC,KAAK,SANAI,KAAKC,WASd,4BACE,2BAAO,gBACP,kBAEEJ,aAAcrB,EAAY0B,UAC1BlB,IAAK,SAACC,GAAK,OAAMpB,EAAeoB,CAAK,EACrCU,YAAY,aAEZC,KAAK,QALAI,KAAKC,WAQd,4BACE,2BAAO,eACP,kBAEEJ,aAAcrB,EAAY2B,SAC1BnB,IAAK,SAACC,GAAK,OAAMnB,EAAcmB,CAAK,EACpCU,YAAY,YAEZC,KAAK,QALAI,KAAKC,WAQd,4BACE,2BAAO,YACP,kBAEEJ,aAAcrB,EAAY4B,OAC1BpB,IAAK,SAACC,GAAK,OAAMlB,EAAYkB,CAAK,EAClCU,YAAY,SAEZC,KAAK,UALAI,KAAKC,WAQd,4BACE,2BAAO,cACP,kBAEEJ,aAAcrB,EAAY6B,SAC1BrB,IAAK,SAACC,GAAK,OAAMjB,EAAciB,CAAK,EACpCU,YAAY,gBAEZC,KAAK,YALAI,KAAKC,WAQd,0BACE,mBACEK,QAxGY,WACpB,IAAIR,EAAQlC,EAASgB,MACjB2B,EAAY1C,EAAae,MACzB4B,EAAW1C,EAAYc,MACvBwB,EAASrC,EAAUa,MACnByB,EAAWrC,EAAYY,MACvBO,EAAQjB,EAAYgB,IACxBZ,QAAQC,IAAIY,IACPsB,EAAAA,EAAAA,IAAQX,IAEFY,EAAAA,EAAAA,IAAQH,IACjBI,EAAAA,EAAAA,IAAW,wBACFD,EAAAA,EAAAA,IAAQF,IACjBG,EAAAA,EAAAA,IAAW,uBACFD,EAAAA,EAAAA,IAAQN,IACjBO,EAAAA,EAAAA,IAAW,2BACFD,EAAAA,EAAAA,IAAQL,IACjBM,EAAAA,EAAAA,IAAW,uBAEXC,EAAAA,EAAAA,IAAqBd,EAAMS,EAAUC,EAASJ,EAAOC,EAASlB,GAAOM,MAAK,SAACoB,GACtEA,GACDhC,EAAS,IAEb,KAdA8B,EAAAA,EAAAA,IAAW,+BAgBf,EA+EiC,SAExB,kBAOX,C","sources":["components/Profile/Profile.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getProfileDetails, profileUpdateRequest } from \"../../APIrequest/APIrequest\";\r\nimport {\r\n  ErrorToast,\r\n  getBase64,\r\n  isEmail,\r\n  isEmpty,\r\n} from \"../../helper/FormHelper\";\r\nimport './Profile.css'\r\n\r\nconst Profile = () => {\r\n  let emailRef,\r\n    firstNameRef,\r\n    lastNameRef,\r\n    mobileRef,\r\n    passwordRef,\r\n    userImageRef,\r\n    userImgView = useRef();\r\n\r\n  useEffect(() => {\r\n    getProfileDetails();\r\n    console.log(profileData);\r\n  }, []);\r\n  const profileData = useSelector((state) => state.profile.value);\r\n  const navigate = useNavigate();\r\n\r\n  const previewImage = () => {\r\n    const imgFile = userImageRef.files[0];\r\n    getBase64(imgFile).then((base64Img) => {\r\n      userImgView.src = base64Img;\r\n    });\r\n  };\r\n\r\n  const updateProfile = () => {\r\n    let email = emailRef.value;\r\n    let firstName = firstNameRef.value;\r\n    let lastName = lastNameRef.value;\r\n    let mobile = mobileRef.value;\r\n    let password = passwordRef.value;\r\n    let photo = userImgView.src;\r\n    console.log(photo);\r\n    if (!isEmail(email)) {\r\n      ErrorToast(\"Valid email address required\");\r\n    } else if (isEmpty(firstName)) {\r\n      ErrorToast(\"First Name required\");\r\n    } else if (isEmpty(lastName)) {\r\n      ErrorToast(\"Last Name required\");\r\n    } else if (isEmpty(mobile)) {\r\n      ErrorToast(\"mobile number required\");\r\n    } else if (isEmpty(password)) {\r\n      ErrorToast(\"password required!\");\r\n    } else {\r\n      profileUpdateRequest(email,firstName,lastName,mobile,password,photo).then((result)=>{\r\n        if(result){\r\n          navigate('/')\r\n        }\r\n      })\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <img\r\n        ref={(input) => (userImgView = input)}\r\n       \r\n        src={profileData.photo}\r\n        alt=\"Avatar\"\r\n      />\r\n      <hr />\r\n      <div className=\"profiledetails\">\r\n        <div >\r\n          <label>Profile Picture</label>\r\n          <input\r\n            onChange={previewImage}\r\n            ref={(input) => (userImageRef = input)}\r\n            placeholder=\"User Email\"\r\n           \r\n            type=\"file\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email Address</label>\r\n          <input\r\n            key={Date.now()}\r\n            defaultValue={profileData.email}\r\n            readOnly={true}\r\n            ref={(input) => (emailRef = input)}\r\n            placeholder=\"User Email\"\r\n       \r\n            type=\"email\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>First Name</label>\r\n          <input\r\n            key={Date.now()}\r\n            defaultValue={profileData.firstname}\r\n            ref={(input) => (firstNameRef = input)}\r\n            placeholder=\"First Name\"\r\n            \r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Last Name</label>\r\n          <input\r\n            key={Date.now()}\r\n            defaultValue={profileData.lastname}\r\n            ref={(input) => (lastNameRef = input)}\r\n            placeholder=\"Last Name\"\r\n          \r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Mobile</label>\r\n          <input\r\n            key={Date.now()}\r\n            defaultValue={profileData.mobile}\r\n            ref={(input) => (mobileRef = input)}\r\n            placeholder=\"Mobile\"\r\n           \r\n            type=\"mobile\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input\r\n            key={Date.now()}\r\n            defaultValue={profileData.password}\r\n            ref={(input) => (passwordRef = input)}\r\n            placeholder=\"User Password\"\r\n           \r\n            type=\"password\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={updateProfile}\r\n           \r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["emailRef","firstNameRef","lastNameRef","mobileRef","passwordRef","userImageRef","userImgView","useRef","useEffect","getProfileDetails","console","log","profileData","useSelector","state","profile","value","navigate","useNavigate","className","ref","input","src","photo","alt","onChange","imgFile","files","getBase64","then","base64Img","placeholder","type","defaultValue","email","readOnly","Date","now","firstname","lastname","mobile","password","onClick","firstName","lastName","isEmail","isEmpty","ErrorToast","profileUpdateRequest","result"],"sourceRoot":""}